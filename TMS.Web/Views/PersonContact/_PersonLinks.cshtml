@model string
@using lr = Resources.Resources;
@{
    List<TMS.DDlList> data = TMS.Extensions.EnumToSelectList<TMS.Library.LinkType>(typeof(TMS.Library.LinkType)).ToList();
}<a href="" target="_blank"/>
<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Common.Address.Links>()
            .Name("PersonLinksGrid" + Model)
       .Columns(columns =>
      {
          columns.Bound(e => e.Link).ClientTemplate("<a  href='#= Link #' target='_blank' >#= Link #<a/>");
          columns.ForeignKey(c => c.LinkType, data, "Value", "Text").MinScreenWidth(550);
          columns.Command(cmd =>
         { cmd.Edit(); cmd.Destroy(); }).Title("Edit/Delete")
                      .Width(100);
      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_LinkTemplate").DisplayDeleteConfirmation(false))
                    .ToolBar(toolbar => toolbar.Template(@<text>
        <div class="toolbar">
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        </div>
                    </text>))
                              .Sortable().Selectable(selectable => selectable
                                                                    .Mode(GridSelectionMode.Multiple))
                   .Pageable(pager => pager
               .Refresh(true))
             .Scrollable().Filterable()
             .Events(e => e.Edit("GeneralPersonGrid_onEdit").Save("PersonChildGrid_onSave"))
            .HtmlAttributes(new { style = "height:350px;" })
                .DataSource(dataSource => dataSource
                      .Ajax()
                           .Model(model =>
                           {
                               model.Id(m => m.ID);
                               model.Field("LinkType", typeof(string));
                           })

                 .PageSize(5)
                                         .Read(read => read.Action("PersonLinks_Read", "PersonContact", new { PersonID = Model }))
                                     .Create(read => read.Action("PersonLinks_Create", "PersonContact", new { pid = Model }))
                                            .Update(read => read.Action("PersonLinks_Update", "PersonContact", new { pid = Model }))
                                              .Destroy(read => read.Action("PersonLinks_Destroy", "PersonContact", new { pid = Model }))
                                .Events(e => e.Error("GeneralErrorHandlerPerson(\"PersonLinksGrid" + Model + "\")").RequestEnd("PersonEducationRequestEnd"))
        ).NoRecords(lr.GridNoRecordFoundMessage)
    )
</div>

<script type="text/x-kendo-template" id="PersonEducationErrorTemplate">
    # if (messages.length) { #
    <li class="ErrorDetailhead">
        <span>#=field#</span>
        <ul class="DetailsError">
            # for (var i = 0; i < messages.length; ++i) { #
            <li>#= messages[i] #</li>
            # } #
        </ul>
    </li>
    # } #
</script>

