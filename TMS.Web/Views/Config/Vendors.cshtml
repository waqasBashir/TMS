@using lr = Resources.Resources;

@{
    ViewBag.Title = lr.VendorTitle;
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
}
<h2>@lr.VendorTitle</h2>
@(Html.Kendo().Grid<TMS.Library.Entities.Common.Configuration.Vendor.Vendors>()
        .Name("VendorsGrid")
        .Columns(columns =>
        {
            columns.Bound(e => e.PrimaryVendor).ClientTemplate("#=VendorTemplate(data)#");
            columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);
            columns.Bound(e => e.UpdatedByAlias).Width(170).Title(lr.ModifiedBy).
ClientTemplate(@"<div class='gridupdated'> # if (UpdatedByAlias!=null) { #" + @"<span class='Addedby'>#=UpdatedByAlias# </span>
    <span class='date' >#=kendo.toString(UpdatedDate,'" + DateFormatScript + @"')#</span>
<span class='time' >#=kendo.toString(UpdatedDate,'" + TimeFormatScript + @"')#</span>
" + @"#} else {#<div>Not Modified</div> </div>#}#");
        })
         .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>)).Selectable(e => e.Mode(GridSelectionMode.Multiple))
        .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_VendorsTemplate").DisplayDeleteConfirmation(false))
       .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
     .Pageable(pager => pager.Refresh(true).Numeric(true).PreviousNext(true).PageSizes(true))
     .Scrollable()
     .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
     .HtmlAttributes(new { style = "height:700px !important;" })
        .DataSource(dataSource => dataSource.Ajax().PageSize(10).Model(model => { model.Id(p => p.ID); })
        .Read(read => read.Action("Vendors_Read", "Config").Data("withSearch"))
        .Update(update => update.Action("Vendors_Update", "Config"))
        .Destroy(update => update.Action("Vendors_Destroy", "Config"))
        .Create(update => update.Action("Vendors_Create", "Config"))
        .Events(events => events.Error("GeneralErrorHandler(\"VendorsGrid\")").RequestEnd("GridRequestEndUpdate")))
        .NoRecords(lr.GridNoRecordFoundMessage)
)
@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (User.IsInRole("CanAddEditVendor"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>}

        @if (User.IsInRole("CanDeleteVendor"))
        {
            <a class="k-button tms-grid-destroy "><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>
    @*@Html.Partial("Static/_gridSearchWidget", lr.VendorTitle)*@

}


<script>
    function VendorTemplate(d) {
        if (d !== null) {
            var VendorTemplate = kendo.template(jQuery("#VendorTemplate").html(), { useWithBlock: false });
            return VendorTemplate(d);
        }
        return '';
    }
</script>

<script id="VendorTemplate" type="text/kendo">
    <div class=''>
        <div class=''>
            <p>
                <span class="heading">
                    <b>
                        #:data.PrimaryVendor#
                    </b>
                </span>
            </p>
            <p>
                <label>
                    @lr.VendorCode :
                </label>
                <span>
                    #:data.Code# 
                </span>
            </p>
        </div>
    </div>
</script>