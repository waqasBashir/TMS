@using lr = Resources.Resources;
@{ 
    var RateType = TMS.Extensions.EnumToSelectList<TMS.Library.RateType>(typeof(TMS.Library.RateType)).ToList();
}
@{
    ViewBag.Title = lr.VenuePermissionName;
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
}
<h2>@lr.VenueTabTitle</h2>
@(Html.Kendo().Grid<TMS.Library.Entities.Common.Configuration.Venues.Venues>()
        .Name("VenuesGrid")
        .Columns(columns =>
        {
            columns.Bound(e => e.PrimaryName).ClientTemplate("#=VenueTemplate(data)#");
            columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);
            columns.Bound(e => e.UpdatedByAlias).Width(170).Title(lr.ModifiedBy).
ClientTemplate(@"<div class='gridupdated'> # if (UpdatedByAlias!=null) { #" + @"<span class='Addedby'>#=UpdatedByAlias# </span>
    <span class='date' >#=kendo.toString(UpdatedDate,'" + DateFormatScript + @"')#</span>
<span class='time' >#=kendo.toString(UpdatedDate,'" + TimeFormatScript + @"')#</span>
" + @"#} else {#<div>Not Modified</div> </div>#}#");
        })
         .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>)).Selectable(e => e.Mode(GridSelectionMode.Multiple))
        .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_VenuesTemplate").DisplayDeleteConfirmation(false))
       .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
     .Pageable(pager => pager.Refresh(true).Numeric(true).PreviousNext(true).PageSizes(true))
     .Scrollable()
     .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
     .HtmlAttributes(new { style = "height:700px !important;" })
        .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .DataSource(dataSource => dataSource.Ajax().PageSize(10).Model(model => { model.Id(p => p.ID); })
        .Read(read => read.Action("Venues_Read", "Config").Data("withSearch"))
        .Update(update => update.Action("Venues_Update", "Config"))
        .Destroy(update => update.Action("Venues_Destroy", "Config"))
        .Create(update => update.Action("Venues_Create", "Config"))
        .Events(events => events.Error("GeneralErrorHandler(\"VenuesGrid\")").RequestEnd("GridRequestEndUpdate")))
        .NoRecords(lr.GridNoRecordFoundMessage)
)
@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (User.IsInRole("CanAddEditVenue"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>}

        @if (User.IsInRole("CanDeleteVenue"))
        {
            <a class="k-button tms-grid-destroy "><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>
    @*@Html.Partial("Static/_gridSearchWidget", lr.MenuClass)*@

}

<script id="toolTipTemplate" type="text/x-kendo-template">

    @if (User.IsInRole("CanAddEditVenue"))
    {

        <span class="grid-tooltip-icon edit" dat-uid="#=uid#" ><i class="mdi mdi-pencil"></i></span>
    }
  
    @if (User.IsInRole("CanDeleteVenue"))
    {
        <span class="grid-tooltip-icon delete" dat-uid="#=uid#" title="Delete"><i class="mdi mdi-delete"></i></span>


    }
</script>

<script>
     jQuery(function () {
       // debugger;
        var template = kendo.template(jQuery("#toolTipTemplate").html());
        //initialize tooltip to grid tbody with filter cells with given CSS class
        var tooltip = jQuery("#VenuesGrid tbody").kendoTooltip({
            position: "center",
            autoHide: false,
            filter: "td:nth-child(1)",
            showOn: "click",
            show: function (e) {
                //get current target row
                this.popup.element.addClass("tmstooltip");
                var currentRow = this.target().closest("tr");
                var grid = jQuery("#VenuesGrid").data("kendoGrid");
                //get current row dataItem
                var dataItem = grid.dataItem(currentRow);

                //pass the dataItem to the template
                var generatedTemplate = template(dataItem);
                //set the generated template to the content of the tooltip
                this.content.html(generatedTemplate);
            },
        }).data("kendoTooltip");

        jQuery(".edit").live("mousedown", function (event) {
            //debugger;
            jQuery("#VenuesGrid").data("kendoGrid").editRow(jQuery("[data-uid='" + jQuery(this).attr("dat-uid") + "']"));
        });

        jQuery(".delete").live("mousedown", function (event) {
            //debugger;
            grid = jQuery("#VenuesGrid").data("kendoGrid");
            var selectedRows = jQuery("#VenuesGrid tr.k-state-selected");
            var checkedLength = selectedRows.length;
            var checkedLength = selectedRows.length;
            if (checkedLength == 1) {
                var grid = jQuery("#VenuesGrid").data("kendoGrid");
                var data = grid.dataItem(jQuery("[data-uid='" + jQuery(this).attr("dat-uid") + "']"));  //get the row data so it can be referred later

                swal({
                    title: '@lr.Areyousureyouwanttodeletethisrecord',
                    text: '@lr.Youwillnotbeabletorecover',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    customClass: "tmsconfirm"
                },
                function (isConfirm) {
                    if (isConfirm) {
                        grid.removeRow(selectedRows);
                        swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       }
                    @*function(){
                       window.location="@Url.Content("~/Program/Class")";
                    }*@
                        );
                   }
                });
            } else if (checkedLength > 1) {
                var grid = jQuery("#VenuesGrid").data("kendoGrid");


                swal({
                    title: '@lr.Areyousureyouwanttodeletetheserecord',
                    text: '@lr.Youwillnotbeabletorecover' + ' <strong style="font-weight:bold">' + checkedLength + ' ' + '@lr.confirmRecords' + '</strong> ?',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    html: true,
                    customClass: "tmsconfirm"
                },
              function (isConfirm) {
                  if (isConfirm) {
                      selectedRows.each(function () { grid.removeRow(jQuery(this)); });
                      swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       }
                    @*function(){
                        window.location="@Url.Content("~/Program/Class")";
                    }*@
                      );
                   }
              });
            } else {

            }
        });



        //destroy from header
        jQuery(".tms-grid-destroyperson").live("mousedown", function (event) {
            var selectedRows = jQuery("#VenuesGrid tr.k-state-selected");
            var checkedLength = selectedRows.length;
            var checkedLength = selectedRows.length;
            if (checkedLength == 1) {
                var grid = jQuery("#VenuesGrid").data("kendoGrid");

                swal({
                    title: '@lr.Areyousureyouwanttodeletethisrecord',
                    text: '@lr.Youwillnotbeabletorecover',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    customClass: "tmsconfirm"
                },
                function (isConfirm) {
                    if (isConfirm) {
                        grid.removeRow(selectedRows);
                        swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                        window.location="@Url.Content("~/Program/Class")";
                        });
                   }
                });
            } else if (checkedLength > 1) {
                var grid = jQuery("#VenuesGrid").data("kendoGrid");

                swal({
                    title: '@lr.Areyousureyouwanttodeletetheserecord',
                    text: '@lr.Youwillnotbeabletorecover' + ' <strong style="font-weight:bold">' + checkedLength + ' ' + '@lr.confirmRecords' + '</strong> ?',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    html: true,
                    customClass: "tmsconfirm"
                },
           function (isConfirm) {
               if (isConfirm) {
                   selectedRows.each(function () { grid.removeRow(jQuery(this)); });
                   swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                        window.location="@Url.Content("~/Program/Class")";
                    });
                   }
           });



            } else {

            }
        });


         jQuery(".persondetail").live("mousedown", function (event) {
             //debugger;
              var url = '@Url.Content("~/Program/ClassDetail?id=")' + jQuery(this).attr("dat-uid");
             window.open(url, '_blank');
         });

         jQuery(".tms-grid-detail").live("mousedown", function (event) {
             //debugger;
             var checkedLength = jQuery("#VenuesGrid tr.k-state-selected").length;
             if (checkedLength == 1) {
                 grid = jQuery("#VenuesGrid").data("kendoGrid");
                 var data = grid.dataItem(jQuery("#VenuesGrid tr.k-state-selected"));
                 var url = '@Url.Content("~/Program/ClassDetail?id=")' + data.ID;
                 window.open(url, '_blank');
             } else {

             }

         });


    });
</script>

<script>
    var enumRateType =  @(Html.Raw(Json.Encode(RateType)));
    var enumCurrency =@Html.Action("CurrenciesData", "DDl");
    function VenueTemplate(d) {
        if (d !== null) {
            var VenueTemplate = kendo.template(jQuery("#VenueTemplate").html(), { useWithBlock: false });
            return VenueTemplate(d);
        }
        return '';
    }
</script>
@*lr.RateTypePerDay  RateTypePerHour*@
<script id="VenueTemplate" type="text/kendo">
    <div class=''>
        <div class=''>
            <p>
                <span class="heading">
                    <b>
                        #:data.PrimaryName#
                    </b>
                </span>
            </p>
            <p>
                <label>
                    @lr.GeneralAddress :
                </label>
                <span>
                    #:data.Country# , #:data.State# #if (data.City!=null){ #, #:data.City#  #}# 
                </span>
            </p>
            <p>

                <label>
                    @lr.VenueCapacity :
                </label>
                <span>
                    #:data.Capacity#
                </span>
                <label>
                    @lr.VenuesCost :
                </label>
                <span>
                    #:data.Cost#  (#:enumvalue(data.Currency,enumCurrency)#) #:enumvalue(data.RateType,enumRateType)#
                </span>
            </p>
            <p>
                <label>
                    @lr.VenueContactPerson :
                </label>
                <span>
                    #:data.ContactPersonName# #:data.ContactPersonPhone# #:data.ContactPersonEmail#
                </span>
            </p>                 
        </div>
    </div>
</script>