
@using lr = Resources.Resources;
@model long
<script type="text/javascript">
    @*var personids;
    function filterPersontoadded() {

        return {
            PersonIds: personids, cid: '@Model'
            }
    }*@
    var personids;
    function CreateTrainerAdditionalData() {
        return {
            oid: '@Model'
        }
    }
</script>
<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Entities.Common.Configuration.SessionMeterialsMapping>()
            .Name("ManageSessionMeterialMap" + Model)
      .Columns(columns =>
      {
          columns.Bound(e => e.PrimaryMaterial).Title(lr.CourseLogisticRequirementsTitle);
          columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);
          columns.Bound(e => e.UpdatedByAlias).Width(170).Title(lr.ModifiedBy).
          ClientTemplate(@"<div class='gridupdated'> # if (UpdatedByAlias!=null) { #" + @"<span class='Addedby'>#=UpdatedByAlias# </span>
    <span class='date' >#=kendo.toString(UpdatedDate,'" + DateFormatScript + @"')#</span>
<span class='time' >#=kendo.toString(UpdatedDate,'" + TimeFormatScript + @"')#</span>
" + @"#} else {#<div>Not Modified</div> </div>#}#");
      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_SessionMeterialMapTemplate").DisplayDeleteConfirmation(false))
                    .ToolBar(toolbar => toolbar.Template(@<text> @RenderAddTemplate()</text>))
        .Sortable().Selectable(selectable => selectable
        .Mode(GridSelectionMode.Multiple))
        .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource => dataSource.Ajax().Model(model => { model.Id(m => m.ID); }).PageSize(8)
        .Read(read => read.Action("ManageSessionMeterialMap_Read", "Config", new { SessionID = Model }))
        .Create(read => read.Action("ManageSessionMeterialMap_Create", "Config").Data("CreateTrainerAdditionalData"))
        //.Update(read => read.Action("MManageCourseMeterialMap_Update", "Config"))
       // .Destroy(read => read.Action("ManageClassMeterialMap_Destroy", "Config"))
        .Events(e => e.Error("GeneralErrorHandler(\"ManageSessionMeterialMap" + Model + "\")").RequestEnd("GridRequestEndUpdate"))
                        ).NoRecords(lr.GridNoRecordFoundMessage)
    )

    @helper RenderAddTemplate()
    {
    <div class="toolbar">
        @if (User.IsInAnyRoles("CanAddEditProgramTrainer"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInAnyRoles("CanDeleteProgramTrainer"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>

}
</div>

@*.Data("CreateTrainerAdditionalData")*@



@*
    var personids;
    function CreateTrainerAdditionalData() {
        return {
            oid: '@Model'
        }
    }
</script>
<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Entities.Common.Configuration.SessionMeterialsMapping>()
            .Name("ManageSessionMeterialMap" + Model)
      .Columns(columns =>
      {
          columns.Bound(e => e.PrimaryMaterial).Title(lr.CourseLogisticRequirementsTitle);
          columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);

      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_SessionMeterialMapTemplate").DisplayDeleteConfirmation(false))
                    .ToolBar(toolbar => toolbar.Template(@<text> @RenderAddTemplate()</text>))
        .Sortable().Selectable(selectable => selectable
        .Mode(GridSelectionMode.Multiple))
        .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource => dataSource.Ajax().Model(model => { model.Id(m => m.ID); }).PageSize(8)
        .Read(read => read.Action("ManageSessionMeterialMap_Read", "Config", new { SessionID = Model }))
        .Create(read => read.Action("ManageSessionMeterialMap_Create", "Config").Data("CreateTrainerAdditionalData"))
        //.Update(read => read.Action("MManageCourseMeterialMap_Update", "Config"))
       // .Destroy(read => read.Action("ManageClassMeterialMap", "Config"))
        .Events(e => e.Error("GeneralErrorHandler(\"ManageSessionMeterialMap" + Model + "\")").RequestEnd("GridRequestEndUpdate"))
                        ).NoRecords(lr.GridNoRecordFoundMessage)
    )

    @helper RenderAddTemplate()
    {
    <div class="toolbar">
        @if (User.IsInAnyRoles("CanAddEditProgramTrainer"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInAnyRoles("CanDeleteProgramTrainer"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>

}
</div>*@

