@model TMS.Library.TMS.Education.PersonDegrees
@using lr = Resources.Resources
<div class=" Alertbox alert alert-danger" style="display:none">
    <ul class="errors"></ul>
</div>
<div class="form-horizontal form-person-popup">
    <div class="form-group">
        @Html.LabelFor(model => model.P_Title, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.P_Title).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.P_Title)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.University, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.University).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.University)
        </div>
    </div>

    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.ResultTypeID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-4 col-lg-4 col-sm-11">
            @(Html.Kendo().DropDownListFor(c => c.ResultTypeID).DataTextField("Text").DataValueField("Value").OptionLabel(lr.PersonEducationDegreeResultTypeOptionalLabel).HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                               .BindTo(TMS.Extensions.EnumToSelectList<TMS.Library.ResultType>(typeof(TMS.Library.ResultType))))
            @Html.ValidationMessageFor(model => model.ResultTypeID)
        </div>

        <div class="col-md-3 col-lg-3 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.Result).Format("%").HtmlAttributes(new { @class = "form-control ", style = "width:100%", @placeHolder = lr.PersonEducationDegreeResultPlaceHolder }))
            @Html.ValidationMessageFor(model => model.Result)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Session, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(model => model.Session).HtmlAttributes(new { style = "width:100%", @class = "session" }).DataTextField("Text").DataValueField("Value").OptionLabel(lr.PersonEducationDegreeSessionOptionalLabel).DataSource(source => { source.Read(read => { read.Action("PersonEducationDegreeSessions", "DDL"); }); })
                      .Events(e => e.Change("OnChangeSessionDuration")))
            @Html.ValidationMessageFor(model => model.Session)
        </div>
    </div>


    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.Duration, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-4 col-lg-4 col-sm-11">
            @(Html.Kendo().DropDownListFor(model => model.Duration).HtmlAttributes(new { style = "width:100%", @class = "duration" }).DataTextField("Text").DataValueField("Value").OptionLabel(lr.PersonEducationDegreeDurationOptionalLabel).DataSource(source => { source.Read(read => { read.Action("PersonEducationDegreeDuration", "DDL"); }); })
        .Events(e => e.Change("OnChangeSessionDuration")))
            @Html.ValidationMessageFor(model => model.Duration)
        </div>

        <div class="col-md-3 col-lg-3 col-sm-11" style="padding-top:4px;">
            @Html.RadioButtonFor(model => model.DegreeStatus, 2, new { @id = "DegreenIncomplete" })@lr.PersonEducationDegreeIncomplete
            @Html.RadioButtonFor(model => model.DegreeStatus, 1, new { @id = "Degreencomplete" })@lr.PersonEducationDegreeComplete
       
        </div>
    </div>
    <div class="form-group" style="margin:0; padding:0px;">
        <div class="col-md-6 col-lg-6 col-sm-12" style="padding:0px;">

        </div>
        <div class="col-md-6 col-lg-6 col-sm-12" style="padding:0px;">

        </div>
    </div>
    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.Major, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
                @(Html.Kendo().TextBoxFor(model => model.Major).HtmlAttributes(new { @class = "form-control", style = "width:100%" }))
                @Html.ValidationMessageFor(model => model.Major)
        </div>
    </div>
    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.Description, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @*@(Html.Kendo().DatePickerFor(x => x.Description).Start(CalendarView.Year).Depth(CalendarView.Year).Format("MMMM yyyy").Value("").HtmlAttributes(new { style = "width: 100%" }).Max(DateTime.Now))*@
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "width:100%" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </div>
</div>
