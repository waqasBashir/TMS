@model TMS.Library.Entities.TMS.Program.ClassTrainerMapping
@using lr = Resources.Resources

<script id="PersonAsTrainerTempalte" type="text/kendo">
    <div class=''>
        <div class=''>
            <p>
                <span class="heading">
                    <b>
                        #:data.P_DisplayName# # if (data.NickName!=null){ #(#:data.NickName#)  #}#
                    </b>
                </span>
            </p>

            <p>
                <label>
                    #:data.PersonRegCode#
                </label>
                <span>

                </span>
            </p>
            <p>
                <label>
                    # if (data.Email!=null) { #  #:data.Email# #}#
                </label>
                <span>

                </span>
            </p>
        </div>
    </div>
</script>

<script type="text/javascript">
    function PersonAsTrainerTempalte(data) {
        if (data != null) {
            var personTemplate = kendo.template(jQuery("#PersonAsTrainerTempalte").html(), { useWithBlock: false });
            return personTemplate(data);
        }
        return '';
    }

    function onTrainerPersonsChange(arg) {
        trainerIds = this.selectedKeyNames().join(',');
    }
</script>
@(Html.Kendo().Grid<TMS.Library.TMS.Persons.Person>()
                    .Name("TrainerPersons")
              .Columns(columns =>
              {
                  
                  columns.Select().Width(50).HeaderTemplate("");
                  columns.Bound(e => e.PersonRegCode).Title(lr.Trainer).ClientTemplate("#=PersonAsTrainerTempalte(data)#");
                  columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);
              })
                .Sortable()
                    .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>))
                              .PersistSelection()
                                .Events(e => e.Edit("Grid_onEdit").Save("General_onSave").Change("onTrainerPersonsChange"))
                                .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable()
                                .HtmlAttributes(new { style = "height:550px;" }).DataSource(dataSource =>
                                dataSource.Ajax().Model(model => model.Id(p => p.ID))
                                .PageSize(10)
                                .Read(read => read.Action("ManageTrainerPerson_Read", "Program").Data("CurrentClassId"))
                                .Events(e => e.Error("GeneralErrorHandler(\"TraineePersons\")").RequestEnd("GridRequestEndUpdate"))
                                ).NoRecords(lr.GridNoRecordFoundMessage)
)
@helper RenderAddTemplate()
    {
<div class="gridsearch trainer">
    <div class="col-md-12 wrap">
        <div class="input-group">
            <input type="search" class="input-default searchinput" id="TrainersearchBox" placeholder="@string.Format("{0} {1}", lr.Search, lr.Trainer)">
            <span class="input-group-addon cursorPointer tms-gridsearch trainer" id="btnTrainerSearch"><i class="mdi mdi-magnify search-icon"></i></span>
        </div>
    </div>
</div>
}

<script>

    jQuery(function () {
        var $TrainersearchBox = jQuery("#TrainersearchBox");
        var $maingrid = jQuery("#TrainerPersons");
        var $maingriddata = $maingrid.data("kendoGrid"); 
        jQuery(".trainer.gridsearch .clearspace.Trainer").live("mousedown", function (event) {
            if ($TrainersearchBox.val() !== "") {
                $TrainersearchBox.val('').focus(); jQuery(".clear.Trainer").removeClass("showicon");
                $maingriddata.dataSource.filter({});
            }
        });
        jQuery(".tms-gridsearch.trainer").live("mousedown", function (event) {
            if ($TrainersearchBox.val() !== "") {
                $maingriddata.dataSource.filter({});
            }
        });
        $TrainersearchBox.on('keyup', function (e) {
            if (e.keyCode == 13) {
                $maingriddata.dataSource.filter({});
            }
        });
        $TrainersearchBox.after('<span class="clearspace Trainer" ><i class="clear Trainer" title="clear"> <i class="mdi mdi-close-circle fa-2x tms-reset" ></i></i></span>');
        $TrainersearchBox.on('keyup input', function () {
            if (jQuery(this).val()) { jQuery(".clear.Trainer").addClass("showicon"); } else { jQuery(".clear.Trainer").removeClass("showicon"); }
        });
    });
</script>