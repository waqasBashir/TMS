@model TMS.Library.Entities.TMS.Program.Sessions
@using lr = Resources.Resources
<script type="text/javascript">
    function filteSessionrrelateditems() {
        return {
            OpenId: jQuery("#ClassID").val(), OpenType: 2
        };
    }

</script>
<div class="Alertbox alert alert-danger" style="display:none">
    <ul class="errors"></ul>
</div>
<input type="hidden" id="SessionID" value="@Model.ID">
<div class="form-horizontal form-person-popup">
    <div class="form-group" id="sessionddl" style="display:none">
        @Html.LabelFor(model => model.ClassID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @*@Html.HiddenFor(x=>x.ClassID, new { name= "ClassID", id= "ClassID" })*@
            @(Html.Kendo().DropDownListFor(m => m.ClassID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.SessionClassOptionalLabel).Events(x => x.Change("onChangeClassId")).Filter(Kendo.Mvc.UI.FilterType.Contains)
            .DataSource(dataSource => { dataSource.Read(read => read.Action("ClasesbyCourseId", "DDL")); }))
            @Html.ValidationMessageFor(model => model.ClassID)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SessionName, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.SessionName).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }).Enable(false))
            @Html.ValidationMessageFor(model => model.SessionName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LanguageID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.LanguageID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.ClassLanguageOptionalLabel)
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .DataSource(dataSource => { dataSource.Read(read => read.Action("Lang", "DDL")); }))
            @Html.ValidationMessageFor(model => model.LanguageID)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ScheduleDate, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DatePickerFor(x => x.ScheduleDate).Start(CalendarView.Month).Depth(CalendarView.Month).Format(KendoDateFormat)
                .HtmlAttributes(new { style = "width: 100%", value = "" })
            )
            @Html.ValidationMessageFor(model => model.ScheduleDate)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartTimeString, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.StartTimeString)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.SessionStartTimeOptionalLabel)
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .BindTo(TMS.DropDownUtil.FillSessionTimeDropDown()))
            @Html.ValidationMessageFor(model => model.StartTimeString)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndTimeString, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.EndTimeString)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.SessionEndTimeOptionalLabel)
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .BindTo(TMS.DropDownUtil.FillSessionTimeDropDown()))
            @Html.ValidationMessageFor(model => model.EndTimeString)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TrainerID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.TrainerID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.TrainerOptionalLabel).Events(x => x.Change("onChangeofSessionTRainer"))
            //  .OptionLabel(new { Text = lr.VenueOpenTypeOptionalLabel, Value = 0 })
            .DataSource(dataSource =>
            {
                dataSource.Read(read => read.Action("Trainer", "DDL").Data("filteSessionrrelateditems"))
                .ServerFiltering(true);
            }).CascadeFrom("ClassID"))

            @Html.ValidationMessageFor(model => model.TrainerID)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsLastSession, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @Html.Kendo().CheckBoxFor(x => x.IsLastSession).Label(lr.SessionIsLastSession).HtmlAttributes(new { @class = "IsLastSession" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LectureConducted, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @Html.Kendo().CheckBoxFor(x => x.LectureConducted).Label(lr.SessionLectureConducted).HtmlAttributes(new { @class = "LectureConducted" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VenueID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.VenueID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.VenueOpenTypeOptionalLabel)
            //  .OptionLabel(new { Text = lr.VenueOpenTypeOptionalLabel, Value = 0 })
            .DataSource(dataSource =>
            {
                dataSource.Read(read => read.Action("Venues", "DDL").Data("filteSessionrrelateditems"))
                .ServerFiltering(true);
            }).CascadeFrom("ClassID"))

            @Html.ValidationMessageFor(model => model.VenueID)
        </div>
    </div>
</div>

<style>
    input.k-checkbox + label {
        line-height: 1.25em;
    }
</style>
