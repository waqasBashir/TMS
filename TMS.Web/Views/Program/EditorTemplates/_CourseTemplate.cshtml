@model TMS.Library.TMS.Course
@using lr = Resources.Resources

<div class="Alertbox alert alert-danger" style="display:none">
    <ul class="errors"></ul>
</div>
<input type="hidden" id="modelid" value="@Model.ID">
<div class="form-horizontal form-person-popup">
    <div class="form-group">
        @Html.LabelFor(model => model.PrimaryName, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.PrimaryName).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.PrimaryName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SecondaryName, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.SecondaryName).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.SecondaryName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CourseCategoryId, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.CourseCategoryId)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.CourseCategoryOptionalLabel).Events(x => x.Change("onChangeCourseCategoryId"))
                    // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
                            .DataSource(dataSource => { dataSource.Read(read => read.Action("CourseCategories", "DDL", new { id = 2 })); }))
            @Html.ValidationMessageFor(model => model.CourseCategoryId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CourseCode, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            <div class="input-group">
                <span class="input-group-addon" id="CourseCategoryCode"></span>
                @(Html.Kendo().TextBoxFor(c => c.CourseCode).HtmlAttributes(new { @class = "form-control input-default", style = "width:100%" }))
            </div>

            @Html.ValidationMessageFor(model => model.CourseCode)
        </div>
    </div>

    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.CourseDurationType, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-4 col-lg-4 col-sm-11">
            @(Html.Kendo().DropDownListFor(c => c.CourseDurationType).DataTextField("Text").DataValueField("Value").OptionLabel(new { Text = lr.CourseDurationTypeOptionalLabel, Value = 0 }).HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                                               .BindTo(TMS.Extensions.EnumToSelectList<TMS.Library.CourseDurationType>(typeof(TMS.Library.CourseDurationType))))
            @Html.ValidationMessageFor(model => model.CourseDurationType)
        </div>

        <div class="col-md-3 col-lg-3 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.CourseDuration).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.CourseDuration)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CourseVendorID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.CourseVendorID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.CourseVendorOptionalLabel)
                    // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
                    .DataSource(dataSource => { dataSource.Read(read => read.Action("CourseVendors", "DDL")); }))
            @Html.ValidationMessageFor(model => model.CourseVendorID)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MinimumAttendanceRequirement, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.MinimumAttendanceRequirement).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.MinimumAttendanceRequirement)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MinimumTrainee, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.MinimumTrainee).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.MinimumTrainee)
        </div>
    </div>

    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.CourseFee, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-4 col-lg-4 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.FeeCurrency)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
                     .OptionLabel(lr.CourseFeeCurrencyOptionalLabel)
                    // .OptionLabel(new { Text = lr.CourseFeeCurrencyOptionalLabel, Value = 0 })
                    .DataSource(dataSource => { dataSource.Read(read => read.Action("Currencies", "DDL")); }))
            @Html.ValidationMessageFor(model => model.FeeCurrency)
        </div>

        <div class="col-md-3 col-lg-3 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.CourseFee).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.CourseFee)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SalesCommission, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.SalesCommission).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.SalesCommission)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PreRequisites, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.TextAreaFor(c => c.PreRequisites, new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.PreRequisites)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.TextAreaFor(c => c.Notes, new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.Notes)
        </div>
    </div>
</div>
