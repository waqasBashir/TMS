@model TMS.Library.Entities.TMS.Program.Classes
@using lr = Resources.Resources

<div class="Alertbox alert alert-danger" style="display:none">
    <ul class="errors"></ul>
</div>
<input type="hidden" id="modelid" value="@Model.ID">
<div class="form-horizontal form-person-popup">
    <div class="form-group">
        @Html.LabelFor(model => model.PrimaryClassTitle, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.PrimaryClassTitle).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.PrimaryClassTitle)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SecondaryClassTitle, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.SecondaryClassTitle).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.SecondaryClassTitle)
        </div>
    </div>
    <div class="form-group" id="courseddl">
        @Html.LabelFor(model => model.CourseID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.CourseID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.ClassCourseOptionalLabel).Events(x => x.Change("onChangeCourseId"))
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .DataSource(dataSource => { dataSource.Read(read => read.Action("Course", "DDL")); }))
            @Html.ValidationMessageFor(model => model.CourseID)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ClassName, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.ClassName).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }).Enable(false))
            @Html.ValidationMessageFor(model => model.ClassName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LanguageID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.LanguageID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.ClassLanguageOptionalLabel)
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .DataSource(dataSource => { dataSource.Read(read => read.Action("Lang", "DDL")); }))
            @Html.ValidationMessageFor(model => model.LanguageID)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassTypeID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
          @(Html.Kendo().DropDownListFor(c => c.ClassTypeID).DataTextField("Text").DataValueField("Value")
           //   .OptionLabel(new { Text = lr.ClassTypeOptionalLabel, Value = 0 })
              .OptionLabel(lr.ClassTypeOptionalLabel)
              .HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                                               .BindTo(TMS.Extensions.EnumToSelectList<TMS.Library.ClassType>(typeof(TMS.Library.ClassType))))
        @Html.ValidationMessageFor(model => model.ClassTypeID)
        </div>
    </div>

    
    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.ClassDurationType, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-4 col-lg-4 col-sm-11">
            @(Html.Kendo().DropDownListFor(c => c.ClassDurationType).DataTextField("Text").DataValueField("Value").OptionLabel(new { Text = lr.CourseDurationTypeOptionalLabel, Value = 0 }).HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                                               .BindTo(TMS.Extensions.EnumToSelectList<TMS.Library.CourseDurationType>(typeof(TMS.Library.CourseDurationType))))
            @Html.ValidationMessageFor(model => model.ClassDurationType)
        </div>

        <div class="col-md-3 col-lg-3 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.ClassDuration).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.ClassDuration)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DatePickerFor(x => x.StartDate).Start(CalendarView.Month).Depth(CalendarView.Month).Format(KendoDateFormat)
                .HtmlAttributes(new { style = "width: 100%" , value = "" })
                )
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DatePickerFor(x => x.EndDate).Start(CalendarView.Month).Depth(CalendarView.Month).Format(KendoDateFormat).HtmlAttributes(new { style = "width: 100%",value = "" }))

            @Html.ValidationMessageFor(model => model.EndDate)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartTimeString, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.StartTimeString)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.SessionStartTimeOptionalLabel)
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .BindTo(TMS.DropDownUtil.FillSessionTimeDropDown()))
            @Html.ValidationMessageFor(model => model.StartTimeString)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndTimeString, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
           @(Html.Kendo().DropDownListFor(m => m.EndTimeString)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.SessionEndTimeOptionalLabel)
            // .OptionLabel(new { Text = lr.CourseCategoryOptionalLabel, Value = 0 })
            .BindTo(TMS.DropDownUtil.FillSessionTimeDropDown()))
        @Html.ValidationMessageFor(model => model.EndTimeString)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EvaluationLink, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.EvaluationLink).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.EvaluationLink)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FollowUp, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.FollowUp).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.FollowUp)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinimumAttendanceRequirement, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.MinimumAttendanceRequirement).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.MinimumAttendanceRequirement)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaximumSessionPerDay, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.MaximumSessionPerDay).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.MaximumSessionPerDay)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MinimumTrainee, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.MinimumTrainee).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.MinimumTrainee)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SendEmails, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @Html.Kendo().CheckBoxFor(x => x.SendEmails).Label(lr.ClassSendEmail).HtmlAttributes(new { @class = "ClassSendEmail" })
        </div>
    </div>
    <div class="form-group" style="margin:0; padding:0px;">
        @Html.LabelFor(model => model.ClassFee, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-4 col-lg-4 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.FeeCurrency)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
                     .OptionLabel(lr.CourseFeeCurrencyOptionalLabel)
                    // .OptionLabel(new { Text = lr.CourseFeeCurrencyOptionalLabel, Value = 0 })
                    .DataSource(dataSource => { dataSource.Read(read => read.Action("Currencies", "DDL")); }))
            @Html.ValidationMessageFor(model => model.FeeCurrency)
        </div>

        <div class="col-md-3 col-lg-3 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.ClassFee).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.ClassFee)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Discount, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().TextBoxFor(c => c.Discount).HtmlAttributes(new { @class = "form-control ", style = "width:100%" }))
            @Html.ValidationMessageFor(model => model.Discount)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DefaultDiscount, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @Html.Kendo().CheckBoxFor(x => x.DefaultDiscount).Label(lr.ClassDefaultDiscount).HtmlAttributes(new { @class = "ClassDefaultDiscount" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TranslationRequiredID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.TranslationRequiredID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            //.OptionLabel(lr.ClassTranslationRequiredOptionalLabel)
            .OptionLabel(new { Text = lr.ClassTranslationRequiredOptionalLabel, Value = 0 })
            .DataSource(dataSource => { dataSource.Read(read => read.Action("Lang", "DDL")); }))
            @Html.ValidationMessageFor(model => model.TranslationRequiredID)
        </div>
    </div>
</div>

<style>
     input.k-checkbox + label{
        line-height: 1.25em;
    }
</style>