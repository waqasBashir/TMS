@model long
@using lr = Resources.Resources;
<script type="text/javascript">
    function PersonTemplate(data) {
        if (data != null) {
            var personTemplate = kendo.template(jQuery("#PersonTemplate").html(), { useWithBlock: false });
            return personTemplate(data);
        }
        return '';
    }

    function imgPersonError(image) {
        image.onerror = "";
        image.src = '@string.Format("{0}{1}", Url.Content("~/"),DefaultPicture)';
        return true;
    }

    var personids;
    function filterPersontoadded() {

         return {
             PersonIds: personids, cid: '@Model'
         }
    }


</script>

<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Entities.TMS.Program.ClassTraineeMapping>()
            .Name("ManageTrainee" + Model)
      .Columns(columns =>
      {
          columns.Select().Width(50).HeaderTemplate("");
          columns.Bound(e => e.PersonID).Title(lr.Trainee).ClientTemplate("#=PersonTemplate(data)#");
          //columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);

      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_ClassTraineeTemplate").DisplayDeleteConfirmation(false).AdditionalViewData(new { ClassID = Model }))
                    .ToolBar(toolbar => toolbar.Template(@<text> @RenderAddTemplate()</text>))
        .Sortable()
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))

        .PersistSelection()
        .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource =>
        dataSource.Ajax().Model(model => { model.Id(m => m.ID); model.Field(p => p.Person).DefaultValue(new TMS.Library.TMS.Persons.Person()); })
        .PageSize(8)
        .Read(read => read.Action("ManageTrainee_Read", "Program", new { ClassID = Model }))
        .Create(read => read.Action("ManageTrainee_Create", "Program").Data("filterPersontoadded"))
        .Destroy(read => read.Action("ManageTrainee_Destroy", "Program"))

        .Events(e => e.Error("GeneralErrorHandler(\"ManageTrainee" + Model + "\")").RequestEnd("GridRequestEndUpdate"))
                        ).NoRecords(lr.GridNoRecordFoundMessage)
    )

    @helper RenderAddTemplate()
    {
    <div class="toolbar">
        @*@if (User.IsInAnyRoles("CanAddEditProgramTrainee"))
            {*@
        <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
        @*}*@
        @if (User.IsInAnyRoles("CanDeleteProgramTrainee"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>

}
</div>

<script id="PersonTemplate" type="text/kendo">
    <div class='person-box'>
        <div class='person'>
            <img src='../#:data.Person.ProfilePicture#' onerror="imgPersonError(this)" class='paddig' alt=''>

            <h2>

                <span class="heading">
                    <b>
                        #:data.Person.P_DisplayName# # if (data.Person.NickName!=null){ #(#:data.Person.NickName#)  #}#
                    </b>
                </span>
            </h2>
            <p>
                #if(data.Person.Designation !=null){#<label>#:data.Person.Designation#</label> #}#
            </p>
            <p>
                # if (data.Person.Email!=null) { # <label> #:data.Person.Email#</label> #}#
            </p>
            <p>
                #if(data.Person.ContactNumber!=null){#<label> #:data.Person.ContactNumber#</label> #}#
            </p>
            <p> #if(data.Person.Gender!=0){#<label>#:data.Person.GenderValue#</label> #}#</p>
        </div>
    </div>
</script>

