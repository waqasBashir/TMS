@using lr = Resources.Resources;
@{
    ViewBag.Title = lr.MenuSession;
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";

}
<script>
    //Class
    function SessionTemplate(data) {
        if (data !== null) {
            var SessionTemplate = kendo.template(jQuery("#SessionTemplate").html(), { useWithBlock: false });
            return SessionTemplate(data);
        }
        return '';
    }
</script>
<h2>Sessions</h2>
@Html.AntiForgeryToken()
@(Html.Kendo().Grid<TMS.Library.Entities.TMS.Program.Sessions>()
            .Name("SessionsGrid")
    .Columns(columns =>
    {
        columns.Bound(e => e.SessionName).ClientTemplate("#=SessionTemplate(data)#");
        columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);
        columns.Bound(e => e.UpdatedByAlias).Width(170).Title(lr.ModifiedBy).
 ClientTemplate(@"<div class='gridupdated'> # if (UpdatedByAlias!=null) { #" + @"<span class='Addedby'>#=UpdatedByAlias# </span>
    <span class='date' >#=kendo.toString(UpdatedDate,'" + DateFormatScript + @"')#</span>
<span class='time' >#=kendo.toString(UpdatedDate,'" + TimeFormatScript + @"')#</span>
" + @"#} else {#<div>Not Modified</div> </div>#}#");
        //   columns.Bound(e => e.ClassName).ClientTemplate("#=ClassName(data)#").Width(100).Title("Status");
    }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_SessionTemplate").DisplayDeleteConfirmation(false))
          .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>))
     .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
     .Pageable(pager => pager.Refresh(true).Numeric(true).PreviousNext(true).PageSizes(true))
     .Scrollable()
     .Events(e => e.Edit("SessionGrid_onEdit").Save("General_onSave"))
     .HtmlAttributes(new { style = "height:700px !important;" })
     .DataSource(dataSource => dataSource.Ajax().ServerOperation(true).Model(model => { model.Id(m => m.ID); })
     .PageSize(5)
     .Read(read => read.Action("Sessions_Read", "Program"))
     .Create(read => read.Action("Sessions_Create", "Program"))
     .Destroy(read => read.Action("Sessions_Destroy", "Program"))
     .Update(read => read.Action("Sessions_Update", "Program"))
     .Events(e => e.Error("GeneralErrorHandler(\"SessionsGrid\")").RequestEnd("GridRequestEndUpdate")))
     .NoRecords(lr.GridNoRecordFoundMessage)
)
@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (User.IsInRole("CanAddEditSession"))
        {
            <a class="k-button tms-grid-add" title="" data-placement="left" data-toggle="tooltip" data-original-title="Tooltip on left">
                <span class="tms-grid-icon mdi mdi-plus "></span>
            </a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInRole("CanDeleteSession"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
        @if (User.IsInRole("CanViewSession"))
        {
            <a class="k-button tms-grid-detail-sesssion"><span class="tms-grid-icon mdi  mdi-open-in-new "></span></a>
        }
        @*@if (User.IsInRole("CanViewAttendanceReport"))
            {
                <a class="k-button tms-class-attendancereport"><span class="tms-grid-icon mdi mdi-chart-bar"></span></a>

            }
            @if (User.IsInRole("CanViewClassFeedBack"))
            {

                <a class="k-button tms-class-feedback"><span class="tms-grid-icon mdi mdi-comment-text-outline"></span></a>
            }*@
    </div>
    @*@Html.Partial("Static/_gridSearchWidget", lr.MenuSession)*@
}



<script id="toolTipTemplate" type="text/x-kendo-template">

    @if (User.IsInRole("CanAddEditSession"))
    {

        <span class="grid-tooltip-icon edit" dat-uid="#=uid#" title="Edit #=SessionName#"><i class="mdi mdi-pencil"></i></span>
    }
    @if (User.IsInRole("CanDeleteSession"))
    {
        <span class="grid-tooltip-icon delete" dat-uid="#=uid#" title="Delete"><i class="mdi mdi-delete"></i></span>
    }
    @if (User.IsInRole("CanViewSession"))
    {
        <span class="grid-tooltip-icon persondetail" dat-uid="#=ID#" title="See the detail of #=SessionName#"><i class="mdi mdi-open-in-new"></i></span>


    }
</script>

<script>
     jQuery(function () {
       // debugger;
        var template = kendo.template(jQuery("#toolTipTemplate").html());
        //initialize tooltip to grid tbody with filter cells with given CSS class
        var tooltip = jQuery("#SessionsGrid tbody").kendoTooltip({
            position: "center",
            autoHide: false,
            filter: "td:nth-child(1)",
            showOn: "click",
            show: function (e) {
                //get current target row
                this.popup.element.addClass("tmstooltip");
                var currentRow = this.target().closest("tr");
                var grid = jQuery("#SessionsGrid").data("kendoGrid");
                //get current row dataItem
                var dataItem = grid.dataItem(currentRow);

                //pass the dataItem to the template
                var generatedTemplate = template(dataItem);
                //set the generated template to the content of the tooltip
                this.content.html(generatedTemplate);
            },
        }).data("kendoTooltip");

        jQuery(".edit").live("mousedown", function (event) {
            //debugger;
            jQuery("#SessionsGrid").data("kendoGrid").editRow(jQuery("[data-uid='" + jQuery(this).attr("dat-uid") + "']"));
        });

        jQuery(".delete").live("mousedown", function (event) {
            //debugger;
            grid = jQuery("#SessionsGrid").data("kendoGrid");
            var selectedRows = jQuery("#SessionsGrid tr.k-state-selected");
            var checkedLength = selectedRows.length;
            var checkedLength = selectedRows.length;
            if (checkedLength == 1) {
                var grid = jQuery("#SessionsGrid").data("kendoGrid");
                var data = grid.dataItem(jQuery("[data-uid='" + jQuery(this).attr("dat-uid") + "']"));  //get the row data so it can be referred later

                swal({
                    title: '@lr.Areyousureyouwanttodeletethisrecord',
                    text: '@lr.Youwillnotbeabletorecover',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    customClass: "tmsconfirm"
                },
                function (isConfirm) {
                    if (isConfirm) {
                        grid.removeRow(selectedRows);
                        swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                         window.location="@Url.Content("~/Program/Sessions")";
                        });
                   }
                });
            } else if (checkedLength > 1) {
                var grid = jQuery("#SessionsGrid").data("kendoGrid");


                swal({
                    title: '@lr.Areyousureyouwanttodeletetheserecord',
                    text: '@lr.Youwillnotbeabletorecover' + ' <strong style="font-weight:bold">' + checkedLength + ' ' + '@lr.confirmRecords' + '</strong> ?',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    html: true,
                    customClass: "tmsconfirm"
                },
              function (isConfirm) {
                  if (isConfirm) {
                      selectedRows.each(function () { grid.removeRow(jQuery(this)); });
                      swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                        window.location="@Url.Content("~/Program/Sessions")";
                        });
                   }
              });
            } else {

            }
        });



        //destroy from header
        jQuery(".tms-grid-destroyperson").live("mousedown", function (event) {
            var selectedRows = jQuery("#SessionsGrid tr.k-state-selected");
            var checkedLength = selectedRows.length;
            var checkedLength = selectedRows.length;
            if (checkedLength == 1) {
                var grid = jQuery("#SessionsGrid").data("kendoGrid");

                swal({
                    title: '@lr.Areyousureyouwanttodeletethisrecord',
                    text: '@lr.Youwillnotbeabletorecover',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    customClass: "tmsconfirm"
                },
                function (isConfirm) {
                    if (isConfirm) {
                        grid.removeRow(selectedRows);
                        swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                        window.location="@Url.Content("~/Program/Sessions")";
                        });
                   }
                });
            } else if (checkedLength > 1) {
                var grid = jQuery("#SessionsGrid").data("kendoGrid");

                swal({
                    title: '@lr.Areyousureyouwanttodeletetheserecord',
                    text: '@lr.Youwillnotbeabletorecover' + ' <strong style="font-weight:bold">' + checkedLength + ' ' + '@lr.confirmRecords' + '</strong> ?',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    html: true,
                    customClass: "tmsconfirm"
                },
           function (isConfirm) {
               if (isConfirm) {
                   selectedRows.each(function () { grid.removeRow(jQuery(this)); });
                   swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                        window.location="@Url.Content("~/Program/Sessions")";
                    });
                   }
           });



            } else {

            }
        });


         jQuery(".persondetail").live("mousedown", function (event) {
             //debugger;
              var url = '@Url.Content("~/Program/SessionsDetail?id=")'  + jQuery(this).attr("dat-uid");
             window.open(url, '_blank');
         });

         jQuery(".tms-grid-detail").live("mousedown", function (event) {
             //debugger;
             var checkedLength = jQuery("#SessionsGrid tr.k-state-selected").length;
             if (checkedLength == 1) {
                 grid = jQuery("#SessionsGrid").data("kendoGrid");
                 var data = grid.dataItem(jQuery("#SessionsGrid tr.k-state-selected"));
                var url = '@Url.Content("~/Program/SessionsDetail?id=")' + data.ID;
                 window.open(url, '_blank');
             } else {

             }

         });


    });
</script>










<script>
    var enumSesssionLangData =@Html.Action("LangData", "DDl");
</script>

<script id="SessionTemplate" type="text/kendo">
    <div class=''>
        <div class=''>
            <p>
                <span class="heading">
                    <b>
                        #:data.SessionName#
                    </b>
                </span>
            </p>
            <p>
                <label>
                    Class Name
                </label>
                <span>
                    #:data.ClassName#
                </span>
            </p>
            <p>
                <label>
                    Class Course
                </label>
                <span>
                    #:data.CourseName#
                </span>
            </p>
            <p>
                <label>
                    Class Language
                </label>
                <span>
                    #:enumvalue(data.LanguageID,enumSesssionLangData)#
                </span>
            </p>
            <p>
                <label>
                    Venue Name
                </label>
                <span>
                    #:data.VenueName#
                </span>
            </p>
            <p>
                <label>
                    Schedule Info
                </label>
                <label>
                    #=kendo.toString(data.ScheduleDate, '@DateFormatScript')#      #:data.StartTimeString#  #:data.EndTimeString#
                </label>
            </p>
            <p>
                <label>Status: </label>
                <label>
                     #if (data.IsAttendanceMarked){ # <span class="mdi mdi-checkbox-blank-circle text-success"></span>    #}else{#  <span class="mdi mdi-checkbox-blank-circle text-danger"></span>  #}#

                </label>
            </p>
        </div>
    </div>
</script>
@section Scripts
{
    <script>

        jQuery(".tms-grid-detail-sesssion").live("mousedown", function (event) {
            var checkedLength = jQuery("#SessionsGrid tr.k-state-selected").length;
            if (checkedLength == 1) {
                grid = jQuery("#SessionsGrid").data("kendoGrid");
                var data = grid.dataItem(jQuery("#SessionsGrid tr.k-state-selected"));
                var url = '@Url.Content("~/Program/SessionsDetail?id=")' + data.ID;
                window.open(url, '_blank');
            } else {

            }

        });

        function onChangeofSessionTrainer(e) {
            if (e.sender.value() === "-1") {
                jQuery("#ManageTrainer").data("kendoGrid").addRow();
            }

        }
    </script>
    <script src="@Url.Content("~/Scripts/ts/tms/Program/Program.js")"></script>
}

<script type="text/javascript">
        var trainerIds;

        function CurrentClassId() {
            return {
                ClassID: jQuery("#ClassID").val(), SearchText: jQuery('#TrainersearchBox').val()
            }
        }
        function filtertrainertoadded() {
            return {
                PersonIds: trainerIds, cid: jQuery("#ClassID").val()
            }
        }
        function requestendManageTrainergrid(e) {
            if (e.type == "create") {
                var TrainerID = jQuery("#TrainerID").data('kendoDropDownList'); TrainerID.dataSource.read(); TrainerID.value("0");
            }
        }
</script>
<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Entities.TMS.Program.ClassTrainerMapping>()
     .Name("ManageTrainer")
      .Columns(columns =>
      {
          columns.Bound(e => e.PersonID).Title(lr.Trainee);

      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_ClassTrainerTemplate").DisplayDeleteConfirmation(false))
        .Sortable()
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
        //.PersistSelection()
        .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .HtmlAttributes(new { style = "height:350px; display:none" }).DataSource(dataSource =>
        dataSource.Ajax().Model(model => { model.Id(m => m.ID); model.Field(p => p.Person).DefaultValue(new TMS.Library.TMS.Persons.Person()); })
        .Create(read => read.Action("ManageTrainerPerson_Create", "Program").Data("filtertrainertoadded"))
        .Events(e => e.Error("GeneralErrorHandler(\"ManageTrainer\")").RequestEnd("requestendManageTrainergrid")))
    )
</div>