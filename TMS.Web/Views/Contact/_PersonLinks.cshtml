@model string
@using lr = Resources.Resources;
@{
    List<TMS.DDlList> data = TMS.Extensions.EnumToSelectList<TMS.Library.LinkType>(typeof(TMS.Library.LinkType)).ToList();
}

<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Common.Address.Links>()
            .Name("PersonLinksGrid" + Model)
       .Columns(columns =>
       {
           columns.Bound(e => e.Link).ClientTemplate("<a  href='http://#= Link #' target='_blank' >#= Link #<a/>");
 
           columns.ForeignKey(c => c.LinkType, data, "Value", "Text").MinScreenWidth(550);
           columns.Command(cmd =>
           { cmd.Edit(); cmd.Destroy(); }).Title("Edit/Delete")
                       .Width(100);
       }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_LinkTemplate").DisplayDeleteConfirmation(false))
                    .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate() </text>))
        .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
        .Pageable(pager => pager.Refresh(true))
        .Scrollable().Filterable()
                                                        .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource => dataSource.Ajax()
                        .Model(model =>
                        {
                            model.Id(m => m.ID);
                            model.Field("LinkType", typeof(string));
                        })

                .PageSize(5)
        .Read(read => read.Action("Links_Read", "Contact", new { type = 1, oid = Model }))
        .Create(read => read.Action("Links_Create", "Contact", new { type = 1, oid = Model }))
        .Update(read => read.Action("Links_Update", "Contact", new { type = 1, oid = Model }))
        .Destroy(read => read.Action("Links_Destroy", "Contact", new { type = 1, oid = Model }))
                                                        .Events(e => e.Error("GeneralErrorHandler(\"PersonLinksGrid" + Model + "\")").RequestEnd("GridRequestEndUpdate"))
    ).NoRecords(lr.GridNoRecordFoundMessage)
    )
</div>
@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (User.IsInRole("CanAddEditPersonOnlinePresence"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInRole("CanDeletePersonOnlinePresence"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>}
    </div>
}


