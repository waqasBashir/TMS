@using lr = Resources.Resources;
@{
    ViewBag.Title = "ManageCourseRelatedExam";
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
}

@Html.AntiForgeryToken()
@(Html.Kendo().Grid<TMS.Library.TMS.CourseRelatedExam.CourseRelatedExamModel>()
        .Name("OrganizationGrid")
    .Columns(columns =>
    {
        columns.Bound(e => e.Name).Title("Related Exams");
        //        columns.Bound(e => e.CreatedBy).Width(190).MinScreenWidth(550).Title(lr.GridAddedBy).ClientTemplate(@"<div class='gridaddedby'>
        //#if(AddedByAlias!=null){#<span class='Addedby' >#:AddedByAlias#</span>#}#
        //<span class='date' >#=kendo.toString(CreatedDate,'" + DateFormatScript + @"')#</span>
        //<span class='time' >#=kendo.toString(CreatedDate,'" + TimeFormatScript + @"')#</span>
        //</div>");

    }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_OrganizationTemplate").DisplayDeleteConfirmation(false))
      .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>))
     .Groupable().Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
     .Pageable(pager => pager.Refresh(true).Numeric(true).PreviousNext(true).PageSizes(true))
                         .Scrollable().Filterable().Events(e => e.Edit("OrganizationIndexGrid_onEdit").Save("General_onSave"))
     .HtmlAttributes(new { style = "height:700px !important;" })
     .DataSource(dataSource => dataSource.Ajax().Model(model => { model.Id(m => m.ID); })
     .PageSize(15)
     .Read(read => read.Action("Organization_Read", "Course"))
         .Create(read => read.Action("Organization_Create", "Organization").Data("OrganizationIndexGetLogo"))
     .Destroy(read => read.Action("Organization_Destroy", "Organization"))
                 .Update(read => read.Action("Organization_Update", "Organization").Data("OrganizationGetLogo"))
                     .Events(e => e.Error("GeneralErrorHandler(\"OrganizationGrid\")")))
     .NoRecords(lr.GridNoRecordFoundMessage)
)

@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (User.IsInRole("CanAddEditOrganization"))
        {
            <a class="k-button tms-grid-add" title="" data-placement="left" data-toggle="tooltip" data-original-title="Tooltip on left">
                <span class="tms-grid-icon mdi mdi-plus "></span>
            </a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInRole("CanDeleteOrganization"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
        @if (User.IsInRole("CanViewOrganizationDetail"))
        {
            <a class="k-button tms-grid-detail"><span class="tms-grid-icon mdi mdi-open-in-new "></span></a>}
    </div>
}

<script>

    jQuery(function () {

        //jQuery(".tms-grid-add").live("mousedown", function (event) {
        //    jQuery(this).parents('.k-grid').data("kendoGrid").addRow();
        //});

        ////general addtion button
        //jQuery(".tms-grid-edit").live("mousedown", function (event) {
        //    var selectedrow = jQuery("#" + jQuery(this).parents('.k-grid')[0].id + " tr.k-state-selected");
        //    if (selectedrow.length == 1) { currentRowId = selectedrow.data().uid; jQuery(this).parents('.k-grid').data("kendoGrid").editRow(selectedrow); }
        //});

        jQuery(".tms-grid-detail").live("mousedown", function (event) {
            var selectedRows = jQuery("#" + jQuery(this).parents('.k-grid')[0].id + " tr.k-state-selected");
            if (selectedRows.length == 1) {
                var grid = jQuery(this).parents('.k-grid').data("kendoGrid");
                var data = grid.dataItem(grid.select());
                var url = '@Url.Content("~/Organization/Detail?oid=")' + data.ID;
                window.open(url, '_blank');
            }
        });
    });
    
    var OrganizationIndexLogo;
    var OrganizationIndex_aid = 0; var OrganizationIndexattachmentname = null;
    function OrganizationIndexLogoSuccess(e) {
        OrganizationIndexLogo = e.response.parentFoldername;
        OrganizationIndex_aid = e.response.aid;
    }
    function OrganizationIndexGetLogo() {
        debugger;
        return {
            filename: OrganizationIndexLogo,
            aid: OrganizationIndex_aid
        }
    }

    function OrganizationIndexOnRemove(e) {
        e.data = {
            aid: OrganizationIndex_aid
        }
    }
    function OrganizationIndexAttachmentData(e) {

    }
    function OrganizationIndexAttachmentSelect(e) {
        var filename = e.files[0].name;
        var dropvalue = checkfiletypeOrganizationlogo(e.files[0].extension.toLowerCase());
        if (dropvalue == "-1") {
            e.preventDefault();
        } else {
            OrganizationIndexattachmentname = filename;
        }
    }
    function checkfiletypeOrganizationlogo(filetype) {
        switch (filetype) {
            case ".jpg": case ".jpeg": case ".bmp": case ".png":
                return "1";
            default:
                return "-1";
                break;
        }
    }


    function OrganizationIndexGrid_onEdit(e) {
        //if current model is not new then remove the Name editor

        var title = jQuery(e.container).parent().find(".k-window-title");
        var update = jQuery(e.container).parent().find(".k-grid-update");
        var cancel = jQuery(e.container).parent().find(".k-grid-cancel");
        //jQuery('<a class="k-button k-button-icontext k-grid-update custom" href="\\#"><span class="k-icon k-i-check"></span>Save & New</a>').insertBefore(".k-grid-update");
        jQuery(cancel).html('<span class="k-icon k-i-cancel"></span>' + lr.CencelRecordGeneralButton);
        if (e.model.isNew()) {
            // add
            jQuery(title).text(lr.AddRecordGeneralTitle);
            jQuery(update).html('<span class="k-icon k-i-check"></span>' + lr.SaveRecordGeneralButton);


            jQuery("#fileupload").kendoUpload({
                // files:files,
                multiple: false,
                async: {
                    saveUrl: '@Url.Content("~/Attachment/SaveOrganizationLogo")',
                    removeUrl: '@Url.Content("~/Attachment/RemoveOrganizationLogo")',
                    autoUpload: true
                },
                remove: OrganizationIndexOnRemove,
                success: OrganizationIndexLogoSuccess,
                select: OrganizationIndexAttachmentSelect,
                //upload: UploadAttachmentData
            });
        } else {
            // edit
            CurrentOrganizationId = e.model.ID;
            jQuery("#fileupload").kendoUpload({
                // files:files,
                multiple: false,
                async: {
                    saveUrl: '@Url.Content("~/Attachment/SavePictureAndLogo")',
                    removeUrl: '@Url.Content("~/Attachment/RemovePictureAndLogo")',
                    autoUpload: true
                },
                remove: OrganizationPictureOnRemove,
                success: OrganizationLogoOnSuccess,
                select: Organization_AttachmentSelect,
                upload: Organization_UploadAttachmentData
            });
            jQuery(title).text(lr.EditRecordGeneralTitle);
            jQuery(update).html('<span class="k-icon k-i-check"></span>' + lr.UpdateRecordGeneralButton);
        }
        //
    }

    var OrganizationLogo;
    var OrganizationProfile_aid; var Organizationattachmentname = null;
    var Organization_parentFoldername = null; var CurrentOrganizationId;
    function OrganizationLogoOnSuccess(e) {
        Organization_parentFoldername = e.response.parentFoldername;
        OrganizationProfile_aid = e.response.aid;
        if (currentRowId != null) {
            var item = jQuery("#OrganizationGrid").data("kendoGrid").dataItem(jQuery("[data-uid='" + jQuery(".k-window-titlebar.k-header:visible +div").attr("data-uid") + "']"));
            currentRowId = null;
            item.dirty = true;
        }
    }
    function OrganizationGetLogo() {
        debugger;
        return {
            filename: Organization_parentFoldername,
            aid: OrganizationProfile_aid
        }
    }

    function OrganizationPictureOnRemove(e) {
        e.data = {
            parentFoldername: Organization_parentFoldername,
            oid: CurrentOrganizationId,
            Opentype: 2,
            aid: OrganizationProfile_aid
        }
    }
    function Organization_UploadAttachmentData(e) {
        e.data = { oid: CurrentOrganizationId, otype: 2, fileType: 12 };
    }
    function Organization_AttachmentSelect(e) {
        var filename = e.files[0].name;
        var dropvalue = checkfiletypeOrganizationlogo(e.files[0].extension.toLowerCase());
        if (dropvalue == "-1") {
            e.preventDefault();
        } else {
            Organizationattachmentname = filename;
        }
    }

</script>

<style>
    .k-grid tr {
        cursor: pointer;
    }
</style>


@section Scripts
{
    <script src="@Url.Content("~/Views/Organization/Organization.js")"></script>
}