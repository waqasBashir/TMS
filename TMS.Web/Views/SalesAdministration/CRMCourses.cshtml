@using lr = Resources.Resources;


<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.Entities.CRM.CRMCourses>()
            .Name("ManageCourse")
      .Columns(columns =>
      {
          columns.Bound(e => e.PrimaryCourseName).Title(lr.CRMCourseTitle);
          columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);

      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_CourseTemplate").DisplayDeleteConfirmation(false))
                    .ToolBar(toolbar => toolbar.Template(@<text> @RenderAddTemplate()</text>))
        .Sortable().Selectable(selectable => selectable
        .Mode(GridSelectionMode.Multiple))
        .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource => dataSource.Ajax().Model(model => { model.Id(m => m.ID); }).PageSize(5)
         .Read(read => read.Action("ManageCourse_Read", "SalesAdministration"))
        .Create(read => read.Action("ManageCourse_Create", "SalesAdministration"))
          .Update(read => read.Action("CourseUpdate", "SalesAdministration"))
          .Destroy(read => read.Action("Course_Destroy", "SalesAdministration"))
        .Events(e => e.Error("GeneralErrorHandler(\"Assigend" + Model + "\")").RequestEnd("GridRequestEndUpdate"))
                        ).NoRecords(lr.GridNoRecordFoundMessage)
    )

    @helper RenderAddTemplate()
    {
    <div class="toolbar">
        @if (User.IsInAnyRoles("CanAddEditPrgramVenues"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInAnyRoles("CanDeletePrgramVenues"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }

    </div>

}
</div>


@*@using lr = Resources.Resources;
    <div class="ChildGrid">
        @Html.AntiForgeryToken()
        @(Html.Kendo().Grid<TMS.Library.Entities.CRM.CRMCourses>()
                .Name("ManageCourse")
          .Columns(columns =>
          {
              columns.Bound(e => e.PrimaryCourseName).Title(lr.CRMCourseTitle);
              columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);

          }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_CourseTemplate").DisplayDeleteConfirmation(false))
                        .ToolBar(toolbar => toolbar.Template(@<text> @RenderAddTemplate()</text>))
            .Sortable().Selectable(selectable => selectable
            .Mode(GridSelectionMode.Multiple))
            .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
            .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource => dataSource.Ajax().Model(model => { model.Id(m => m.ID); }).PageSize(5)
            .Read(read => read.Action("ManageCourse_Read", "SalesAdministration"))
            .Create(read => read.Action("ManageCourse_Create", "SalesAdministration"))
              .Update(read => read.Action("CourseUpdate", "SalesAdministration"))
              .Destroy(read => read.Action("Course_Destroy", "SalesAdministration"))
            .Events(e => e.Error("GeneralErrorHandler(\"ManageCourse\")").RequestEnd("GridRequestEndUpdate"))).NoRecords(lr.GridNoRecordFoundMessage)
        )

        @helper RenderAddTemplate()
        {
        <div class="toolbar">
            @if (User.IsInAnyRoles("CanAddEditProgramTrainer"))
            {
                <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
                <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
            }
            @if (User.IsInAnyRoles("CanDeleteProgramTrainer"))
            {
                <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
            }
        </div>

    }
    </div>*@

@*.Data("CreateTrainerAdditionalData")*@

