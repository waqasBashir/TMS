@using lr = Resources.Resources;
@{
    ViewBag.Title = lr.RolesTabTitile;
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
}
<h2>@lr.RolesTitle</h2>
@(Html.Kendo().Grid<TMS.Library.Entities.Common.Roles.Roles>()
        .Name("RolesGrid")
        .Columns(columns =>
        {
           
            columns.Bound(e => e.RolePrimaryName).ClientTemplate("#=RolesTemplate(data)#");
            columns.Bound(e => e.AddedByAlias).ClientTemplate("#=addedbytemplate(data)#").Width(190).MinScreenWidth(550).Title(lr.GridAddedBy);
        })
     .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>)).Selectable(e => e.Mode(GridSelectionMode.Multiple))
     .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_RolesTemplate").DisplayDeleteConfirmation(false))
     .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
     .Pageable(pager => pager.Refresh(true).Numeric(true).PreviousNext(true).PageSizes(true))
     .Scrollable()
     .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
     .HtmlAttributes(new { style = "height:700px !important;" })
        .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
        .DataSource(dataSource => dataSource.Ajax().PageSize(10).Model(model => { model.Id(p => p.ID);})
        .Read(read => read.Action("Roles_Read", "Admin").Data("withSearch"))
        .Update(update => update.Action("Roles_Update", "Admin"))
        .Destroy(update => update.Action("Roles_Destroy", "Admin"))
        .Create(update => update.Action("Roles_Create", "Admin"))
        .Events(events => events.Error("GeneralErrorHandler(\"RolesGrid\")")))
        .NoRecords(lr.GridNoRecordFoundMessage)
)
@helper RenderAddTemplate()
                {
    <div class="toolbar">
        @if(User.IsInRole("CanAddEditRoles"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>}

        @if(User.IsInRole("CanDeleteRoles"))
        {
            <a class="k-button tms-grid-destroy "><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>
    @*@Html.Partial("Static/_gridSearchWidget", lr.MenuClass)*@

}


<script>
    function RolesTemplate(d)
    {
        if (d !== null)
        {
            var VenueTemplate = kendo.template(jQuery("#RolesTemplate").html(), { useWithBlock: false });
            return VenueTemplate(d);
        }
        return '';
    }
</script>
<script id="RolesTemplate" type="text/kendo">
    <div class=''>
        <div class=''>
            <p>
                <span class="heading">
                    <b>
                        #:data.RolePrimaryName#
                    </b>
                </span>
            </p>
        </div>
    </div>
</script>