@model TMS.Library.TMS.Persons.PersonRolesMapping
@using lr = Resources.Resources
<div class=" Alertbox alert alert-danger" style="display:none">
    <ul class="errors"></ul>
</div>
<div class="form-horizontal form-person-popup">
    <div class="form-group">
        @Html.LabelFor(model => model.RoleID, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @(Html.Kendo().DropDownListFor(m => m.RoleID)
            .HtmlAttributes(new { style = "width:100%" })
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel(lr.RolesDropDownTitleOptionalLablel)


            .DataSource(dataSource => { dataSource.Read(read => read.Action("Roles", "DDL")); }))
            @Html.ValidationMessageFor(model => model.RoleID)
        </div>
    </div>
    <div class="form-group islogin">
        @*<div class="form-group">
            @Html.LabelFor(model => model.ClientType, new { @class = "col-md-3 col-lg-3 control-label" })
            <div class="col-md-7 col-lg-7 col-sm-11">
                @(Html.Kendo().DropDownListFor(c => c.ClientType).DataTextField("Text").DataValueField("Value")
                .OptionLabel(lr.ClientTypeOptionalLabel)
                //.OptionLabel(new { Text = lr.GenderOptionallabel, Value = 0 })
                .HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                .BindTo(TMS.Extensions.EnumToSelectList<TMS.Library.ClientType>(typeof(TMS.Library.ClientType))))

            </div>
        </div>*@


        @*<div class="form-group">
                @Html.LabelFor(model => model.ClientType, new { @class = "col-md-3 col-lg-3 control-label" })
                <div class="col-md-7 col-lg-7 col-sm-11">
                @(Html.Kendo().DropDownListFor(c => c.ClientType).DataTextField("Text").DataValueField("Value")
                .OptionLabel(lr.ClientTypeOptionalLabel)
                //.OptionLabel(new { Text = lr.GenderOptionallabel, Value = 0 })
                .HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                .BindTo(TMS.Extensions.EnumToSelectList<TMS.Library.ClientType>(typeof(TMS.Library.ClientType))))

                </div>
            </div>*@
        <div class="col-md-2 col-lg-2"></div>
        @*@Html.LabelFor(model => model.IsLogin, new { @class = "col-md-3 col-lg-3 control-label" })*@
        <div class="col-md-7 col-lg-7 col-sm-11" style="margin-left:30px;">


            @Html.Kendo().CheckBoxFor(model => model.IsLogin)
        </div>
    </div>
    <div class="form-group pwd">
        @Html.LabelFor(model => model.Password, new { @class = "col-md-3 col-lg-3 control-label" })
        <div class="col-md-7 col-lg-7 col-sm-11">
            @Html.Kendo().TextBoxFor(model => model.Password).HtmlAttributes(new { @class = "form-control ", @Type="Password", @style = " width: 100%;" })
        </div>
    </div>
</div>

<script>
    jQuery(".pwd").hide();
    jQuery(".islogin").hide();

    jQuery(function () {
        jQuery("#IsLogin").click(function () {
            if (jQuery(this).is(':checked')) {
                jQuery(".pwd").show();
            }
            else {
                jQuery(".pwd").hide();
            }
        });

        jQuery("#RoleID").change(function () {
            if (jQuery(this).val()=='2') {
                jQuery(".islogin").show();
            }
            else {
                jQuery(".islogin").hide();
                jQuery(".Password").text("");
            }
                
        });

    });
   
</script>

            @*var selectedText1 = jQuery("#RoleID").val(jQuery(this).find(":selected").text());*@