

@model string
@using lr = Resources.Resources;
@{
    List<TMS.DDlList> data = TMS.Extensions.EnumToSelectList<TMS.Library.PersonRelationType>(typeof(TMS.Library.PersonRelationType)).ToList();
}
<div class="ChildGrid">
    @(Html.Kendo().Grid<TMS.Library.TMS.Persons.Others.PersonRelation>()
            .Name("PersonRelationGrid" + Model)
       .Columns(columns =>
      {
          columns.Bound(e => e.RelationToDisplayName);
          columns.ForeignKey(c => c.RelationType, data, "Value", "Text");
          columns.Bound(e => e.AddedByAlias).Width(190).MinScreenWidth(550).Title(lr.GridAddedBy).ClientTemplate(@"<div class='gridaddedby'>
<span class='Addedby' >#:AddedByAlias#</span>
<span class='date' >#=kendo.toString(CreatedDate,'" + DateFormatScript + @"')#</span>
<span class='time' >#=kendo.toString(CreatedDate,'" + TimeFormatScript + @"')#</span>
</div>");
      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_PersonRelationTemplate").DisplayDeleteConfirmation(false))
     .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>))
                                    .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
                                    .Pageable(pager => pager.Refresh(true)).Scrollable().Filterable()
                                                      .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
                                    .HtmlAttributes(new { style = "height:350px;" })
                                    .DataSource(dataSource => dataSource
                                    .Ajax().Model(model => { model.Id(m => m.RelationID); model.Field("RelationType", typeof(string)); }).PageSize(5)
                                                            .Read(read => read.Action("Relation_read", "People", new { pid = Model }))
                                                    .Create(read => read.Action("Relation_Create", "People", new { pid = Model }))
                                                    .Update(read => read.Action("Relation_Update", "People"))
                                                    .Destroy(read => read.Action("Relation_Destroy", "People"))
                                                              .Events(e => e.Error("GeneralErrorHandler(\"PersonRelationGrid" + Model + "\")").RequestEnd("GridRequestEndUpdate"))
                                    ).NoRecords(lr.GridNoRecordFoundMessage)
    )
</div>

@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (User.IsInRole("CanAddEditPersonRelation"))
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
        }
        @if (User.IsInRole("CanDeletePersonRelation"))
        {
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
        }
    </div>
}
